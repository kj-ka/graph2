{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","id","value","handleClear","driver1","driver2","path","message","submessage","handleSwitch","driver1tmp","state","driver2tmp","handleCalculate","driver1_valid","validate_driver","driver2_valid","shortestPath","graph","e","console","log","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","drivers","filter","lang","slice","getSuggestionValue","d","renderSuggestion","suggestion","react_default","a","createElement","getDriver1Suggestions","_ref","driver1suggestions","getDriver2Suggestions","_ref2","driver2suggestions","onSuggestionsClearRequested","onDriver1Change","_ref3","newValue","onDriver2Change","_ref4","require","Graph","data","year","driver","addEdge","driver_invalid","levenshtein","driver_valid","distance","new_distance","driver1Props","placeholder","onChange","driver2Props","className","dist_default","spellCheck","suggestions","onSuggestionsFetchRequested","inputProps","Button","onClick","renderResults","output_arr","push","key","i","neighbors","u","v","undefined","includes","source","queue","visited","predecessor","tail","reverse","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0fce957.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from \"react-bootstrap\";\nimport Autosuggest from 'react-autosuggest';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      driver1: \"Carlos Sainz\",\n      driver1suggestions: [],\n      driver2: \"Fernando Alonso\",\n      driver2suggestions: [],\n      drivers: require('./drivers.json'),\n      path: null,\n      message: \"Initial message\",\n      submessage: \"Initial submessage\"\n    }\n  }\n\n  componentDidMount() {\n    var graph = new this.Graph();\n    var data = require('./data.json');\n\n    for (var year in data) {\n      for (var driver in data[year]) {\n        graph.addEdge(driver, data[year][driver]);\n      }\n    }\n\n    this.setState({\n      graph: graph\n    });\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleClear = event => {\n    this.setState({\n      driver1: \"\",\n      driver2: \"\",\n      path: null,\n      message: \"Cleared\",\n      submessage: \"Cleared submessage\"\n    })\n  }\n\n  handleSwitch = event => {\n    var driver1tmp = this.state.driver1\n    var driver2tmp = this.state.driver2\n    this.setState({\n      driver1: driver2tmp,\n      driver2: driver1tmp\n    })\n  }\n\n  // Neat\n  validate_driver(driver_invalid) {\n    const drivers = require('./drivers.json')\n    const levenshtein = require('js-levenshtein');\n    var driver_valid = \"\"\n    var distance = 99;\n\n    for (var d in drivers) {\n      var new_distance = levenshtein(drivers[d], driver_invalid)\n      if (new_distance < distance) {\n        driver_valid = drivers[d]\n        distance = new_distance\n      }\n    }\n    return driver_valid;\n  }\n\n  handleCalculate = event => {\n    if (this.state.driver1 == \"\" || this.state.driver2 == \"\") {\n      return\n    }\n\n    var driver1_valid = this.validate_driver(this.state.driver1);\n    var driver2_valid = this.validate_driver(this.state.driver2);\n\n    try {\n      var path = this.shortestPath(this.state.graph, driver1_valid, driver2_valid);\n      this.setState({\n        driver1: driver1_valid,\n        driver2: driver2_valid,\n        path: path\n      });\n    } catch (e) {\n      console.log(e)\n      this.setState({\n        path: null,\n        message: \"No, sorry!\",\n        submessage: \"We couldn't find a link between these two drivers.\"\n      })\n    }\n  }\n\n  year(driver1, driver2) {\n    var data = require('./data.json');\n    for (var year in data) {\n      for (var driver in data[year]) {\n        if (data[year][driver1] == driver2) {\n          return year;\n        }\n      }\n    }\n  }\n\n  getSuggestions = value => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n\n    return inputLength === 0 ? [] : this.state.drivers.filter(lang =>\n      lang.toLowerCase().slice(0, inputLength) === inputValue\n    );\n  };\n\n\n  // Just return the driver. No JSON navigation necessary.\n  getSuggestionValue = d => d;\n\n  // Just render the suggestion.\n  renderSuggestion = suggestion => (<span>{suggestion}</span>);\n\n  // Get suggestions for driver 1.\n  getDriver1Suggestions = ({ value }) => {\n    this.setState({ driver1suggestions: this.getSuggestions(value) });\n  };\n\n  // Get suggestions for driver 2.\n  getDriver2Suggestions = ({ value }) => {\n    this.setState({ driver2suggestions: this.getSuggestions(value) });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      driver1suggestions: []\n    });\n  };\n\n  onDriver1Change = (event, { newValue }) => { this.setState({ driver1: newValue }); };\n  onDriver2Change = (event, { newValue }) => { this.setState({ driver2: newValue }); };\n\n  render() {\n    var driver1Props = { placeholder: '', value: this.state.driver1, onChange: this.onDriver1Change };\n    var driver2Props = { placeholder: '', value: this.state.driver2, onChange: this.onDriver2Change };\n\n    return (\n      <div className=\"App container\">\n        <div className=\"logo\">\n          <div className=\"chevron\">></div>\n          <div className=\"text-container\">\n            <div className=\"transistive\">Transitive</div>\n            <div className=\"teammate\">Teammate</div>\n            <div className=\"comparisons\">Comparisons</div>\n          </div>\n        </div>\n\n        <div className=\"inputs\">\n          <div className=\"text\">is</div>\n          <Autosuggest\n            spellCheck=\"false\"\n            suggestions={this.state.driver1suggestions}\n            onSuggestionsFetchRequested={this.getDriver1Suggestions}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={this.getSuggestionValue}\n            renderSuggestion={this.renderSuggestion}\n            inputProps={driver1Props}\n          />\n          <div className=\"text\">better than</div>\n          <Autosuggest\n            spellCheck=\"false\"\n            suggestions={this.state.driver2suggestions}\n            onSuggestionsFetchRequested={this.getDriver2Suggestions}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={this.getSuggestionValue}\n            renderSuggestion={this.renderSuggestion}\n            inputProps={driver2Props}\n          />\n          <div className=\"text\">?</div>\n        </div>\n\n        <div className=\"buttons\">\n          <Button id=\"clear\" onClick={this.handleClear}><i className=\"fas fa-times\"></i>Clear</Button>\n          <Button id=\"switch\" onClick={this.handleSwitch}><i className=\"fas fa-exchange-alt\"></i>Swap</Button>\n          <Button id=\"calculate\" onClick={this.handleCalculate}><i className=\"fas fa-chevron-right\"></i>Go</Button>\n        </div>\n\n        <div className=\"result text-center\">\n          <div className=\"result-inner\">\n            {this.renderResults()}\n          </div>\n        </div>\n\n        <div className=\"footer\">\n          <span className=\"pull-left\">Currently using data from 1998-onwards.</span>\n          <span className=\"pull-right\">/u/kj-ka-</span>\n        </div>\n      </div>\n    );\n  }\n\n  renderResults() {\n    var path = this.state.path;\n    var output_arr = []\n\n    if (path) {\n      output_arr.push(\n        <div key={-1}>\n          <div className=\"result-title\">Yes!</div>\n          <div className=\"result-subtitle\">And here's why:</div>\n        </div>\n      )\n\n      for (var i = 0; i < path.length - 1; i++) {\n        var driver1 = path[i]\n        var driver2 = path[i + 1]\n        output_arr.push(\n          <div className=\"result-row\" key={i}>\n            <div className=\"wrapper\">\n              <div className=\"row-item left\"><div className=\"driver-left\">{driver1}</div></div>\n              <div className=\"row-item middle\">\n                <div className=\"beat\">beat</div>\n                <div className=\"year\">in {this.year(driver1, driver2)}</div>\n              </div>\n              <div className=\"row-item right\"><span className=\"driver-right\">{driver2}</span></div>\n            </div>\n            <div className=\"arrow-down\"></div>\n          </div>\n\n          // <div className=\"result-row\" key={i}>\n          //   <Media>\n          //     <Media.Body>{driver1} beat {driver2}</Media.Body>\n          //     <Media.Right><div>{this.year(driver1, driver2)}</div></Media.Right>\n          //   </Media>\n          //   <div className=\"arrow-down\"></div>\n          // </div>\n        );\n      }\n      return output_arr;\n    } else {\n      return (\n        <div>\n          <div className=\"result-title-fail\">{this.state.message}</div>\n          <div className=\"result-subtitle\">{this.state.submessage}</div>\n        </div>\n      )\n    }\n  }\n\n  Graph() {\n    var neighbors = this.neighbors = {};\n\n    this.addEdge = function (u, v) {\n      if (neighbors[u] === undefined) {\n        neighbors[u] = [];\n      }\n      if (!neighbors[u].includes(v)) {\n        neighbors[u].push(v);\n      }\n    };\n    return this;\n  }\n\n  shortestPath(graph, source, target) {\n    if (source == target) {\n      return;\n    }\n    var queue = [source],\n      visited = { source: true },\n      predecessor = {},\n      tail = 0;\n\n    while (tail < queue.length) {\n      var u = queue[tail++], neighbors = graph.neighbors[u];\n      if (neighbors) {\n        for (var i = 0; i < neighbors.length; ++i) {\n          var v = neighbors[i];\n          if (visited[v]) {\n            continue;\n          }\n          visited[v] = true;\n          if (v === target) {\n            var path = [v];\n            while (u !== source) {\n              path.push(u);\n              u = predecessor[u];\n            }\n            path.push(u);\n            path.reverse();\n            return (path);\n          }\n          predecessor[v] = u;\n          queue.push(v);\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["AboutModal.js","App.js","serviceWorker.js","index.js"],"names":["AboutModal","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleShow","bind","assertThisInitialized","handleClose","state","show","setState","Date","react_default","a","createElement","onClick","className","Modal","onHide","Body","href","Button","id","React","Component","App","handleChange","event","defineProperty","target","value","handleClear","driver1","driver2","path","message","submessage","handleSwitch","driver1tmp","driver2tmp","handleCalculate","driverLookup","shortestPath","graph","getSuggestions","inputValue","trim","toLowerCase","length","filtered","drivers","filter","driver","includes","slice","getSuggestionValue","d","renderSuggestion","suggestion","getDriver1Suggestions","_ref","driver1suggestions","getDriver2Suggestions","_ref2","driver2suggestions","onSuggestionsClearRequested","onDriver1Change","_ref3","newValue","onDriver2Change","_ref4","require","Graph","data","year","addEdge","driver1Props","placeholder","onChange","spellCheck","driver2Props","dist_default","suggestions","onSuggestionsFetchRequested","inputProps","renderResults","src_AboutModal","output_arr","push","key","i","neighbors","u","v","undefined","source","queue","visited","predecessor","tail","reverse","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f5ac5ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nclass AboutModal extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n            show: false\r\n        };\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    handleShow() {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    render() {\r\n        var date = new Date();\r\n        return (\r\n            <div>\r\n                <i onClick={this.handleShow} className=\"fas fa-info-circle pull-right\"></i>\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Body>\r\n                        <h1>It's just satire!</h1>\r\n                        <p>Formula One isn't a spec series, which makes driver ranking difficult and highly subjective. While the best among them will naturally migrate to the top teams, the comparison of drivers who have never been teammates remains a significant challenge.</p>\r\n                        <p>While it's possible to draw some rudimentary conclusions from transitive teammate comparisons across different years, they are prone to error.</p>\r\n                        <div className=\"quote\">\r\n                            Because the mechanisms driving comparisons do not remain static in something as complex as F1, so the reality of relative performance driver-to-driver is forever changing. In getting an accurate reading on this, it pays not to be too dogmatic.\r\n                            <div className=\"author\">- Mark Hughes</div>\r\n                        </div>\r\n                        <p>When applied excessively, this technique can result in some amusingly absurd conclusions. So - on that note - see what you can come up with.</p>\r\n                        <p><a href=\"https://www.reddit.com/user/kj-ka-/\">u/kj-ka-</a></p>\r\n                        <div className=\"button-wrapper\">\r\n                            <Button id=\"close\" onClick={this.handleClose}><i className=\"fas fa-times\"></i>Close</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutModal;","import React, { Component } from 'react';\nimport { Button } from \"react-bootstrap\";\nimport AboutModal from \"./AboutModal\";\nimport Autosuggest from 'react-autosuggest';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      driver1: \"Daniil Kvyat\",\n      driver1suggestions: [],\n      driver2: \"Sebastian Vettel\",\n      driver2suggestions: [],\n      drivers: require('./drivers.json'),\n      path: null,\n      message: \"Press Go!\",\n      submessage: \"\"\n    }\n  }\n\n  componentDidMount() {\n    var graph = new this.Graph();\n    var data = require('./data.json');\n\n    for (var year in data) {\n      for (var driver in data[year]) {\n        graph.addEdge(driver, data[year][driver]);\n      }\n    }\n\n    this.setState({\n      graph: graph\n    });\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleClear = event => {\n    this.setState({\n      driver1: \"\",\n      driver2: \"\",\n      path: null,\n      message: \"Cleared\",\n      submessage: \"Enter two drivers and press Go.\"\n    })\n  }\n\n  handleSwitch = event => {\n    var driver1tmp = this.state.driver1\n    var driver2tmp = this.state.driver2\n    this.setState({\n      driver1: driver2tmp,\n      driver2: driver1tmp\n    })\n  }\n\n  driverLookup(driver) {\n    return this.state.drivers.includes(driver);\n  }\n\n  handleCalculate = event => {\n    if (this.driverLookup(this.state.driver1) && this.driverLookup(this.state.driver2)) {\n      var path = this.shortestPath(this.state.graph, this.state.driver1, this.state.driver2);\n      if (path) {\n        this.setState({\n          path: path\n        });\n      } else {\n        this.setState({\n          path: null,\n          message: \"No, sorry!\",\n          submessage: \"We couldn't find a link between these two drivers.\"\n        });\n      }\n    } else {\n      this.setState({\n        path: null,\n        message: \"Error\",\n        submessage: \"Enter the names of two drivers. Use the drop-down list to help.\"\n      });\n    }\n  }\n\n  year(driver1, driver2) {\n    var data = require('./data.json');\n    for (var year in data) {\n      for (var driver in data[year]) {\n        if (data[year][driver1] == driver2) {\n          return year;\n        }\n      }\n    }\n  }\n\n  getSuggestions = value => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n\n    if (inputLength === 0) {\n      return []\n    }\n\n    var filtered = this.state.drivers.filter(driver =>\n      driver.toLowerCase().includes(inputValue)\n    );\n\n    if (filtered.length > 5) {\n      return filtered.slice(0, 6);\n    }\n\n    return filtered;\n  };\n\n\n  // Just return the driver. No JSON navigation necessary.\n  getSuggestionValue = d => d;\n\n  // Just render the suggestion.\n  renderSuggestion = suggestion => (<span>{suggestion}</span>);\n\n  // Get suggestions for driver 1.\n  getDriver1Suggestions = ({ value }) => {\n    this.setState({ driver1suggestions: this.getSuggestions(value) });\n  };\n\n  // Get suggestions for driver 2.\n  getDriver2Suggestions = ({ value }) => {\n    this.setState({ driver2suggestions: this.getSuggestions(value) });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      driver1suggestions: []\n    });\n  };\n\n  onDriver1Change = (event, { newValue }) => { this.setState({ driver1: newValue }); };\n  onDriver2Change = (event, { newValue }) => { this.setState({ driver2: newValue }); };\n\n  render() {\n    var driver1Props = { placeholder: '', value: this.state.driver1, onChange: this.onDriver1Change, spellCheck: false };\n    var driver2Props = { placeholder: '', value: this.state.driver2, onChange: this.onDriver2Change, spellCheck: false };\n\n    return (\n      <div className=\"App container\">\n        <div className=\"logo\">\n          <div className=\"chevron\">></div>\n          <div className=\"text-container\">\n            <div className=\"transistive\">Transitive</div>\n            <div className=\"teammate\">Teammate</div>\n            <div className=\"comparisons\">Comparisons</div>\n          </div>\n        </div>\n\n        <div className=\"inputs\">\n          <div className=\"text\">is</div>\n          <Autosuggest\n            spellCheck=\"false\"\n            suggestions={this.state.driver1suggestions}\n            onSuggestionsFetchRequested={this.getDriver1Suggestions}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={this.getSuggestionValue}\n            renderSuggestion={this.renderSuggestion}\n            inputProps={driver1Props}\n          />\n          <div className=\"text\">better than</div>\n          <Autosuggest\n            spellCheck=\"false\"\n            suggestions={this.state.driver2suggestions}\n            onSuggestionsFetchRequested={this.getDriver2Suggestions}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={this.getSuggestionValue}\n            renderSuggestion={this.renderSuggestion}\n            inputProps={driver2Props}\n          />\n          <div className=\"text\">?</div>\n        </div>\n\n        <div className=\"buttons\">\n          <Button id=\"clear\" onClick={this.handleClear}><i className=\"fas fa-times\"></i>Clear</Button>\n          <Button id=\"switch\" onClick={this.handleSwitch}><i className=\"fas fa-exchange-alt\"></i>Swap</Button>\n          <Button id=\"calculate\" onClick={this.handleCalculate}><i className=\"fas fa-chevron-right\"></i>Go</Button>\n        </div>\n\n        <div className=\"result text-center\">\n          <div className=\"result-inner\">\n            {this.renderResults()}\n          </div>\n        </div>\n\n        <div className=\"footer\"><AboutModal /></div>\n      </div>\n    );\n  }\n\n  renderResults() {\n    var path = this.state.path;\n    var output_arr = []\n\n    if (path) {\n      output_arr.push(\n        <div key={-1}>\n          <div className=\"result-title\">Yes!</div>\n          <div className=\"result-subtitle\">And here's why:</div>\n        </div>\n      )\n\n      for (var i = 0; i < path.length - 1; i++) {\n        var driver1 = path[i]\n        var driver2 = path[i + 1]\n        output_arr.push(\n          <div className=\"result-row\" key={i}>\n            <div className=\"wrapper\">\n              <div className=\"row-item left\"><div className=\"driver-left\">{driver1}</div></div>\n              <div className=\"row-item middle\">\n                <div className=\"beat\">beat</div>\n                <div className=\"year\">in {this.year(driver1, driver2)}</div>\n              </div>\n              <div className=\"row-item right\"><span className=\"driver-right\">{driver2}</span></div>\n            </div>\n            <div className=\"arrow-down\"></div>\n          </div>\n\n          // <div className=\"result-row\" key={i}>\n          //   <Media>\n          //     <Media.Body>{driver1} beat {driver2}</Media.Body>\n          //     <Media.Right><div>{this.year(driver1, driver2)}</div></Media.Right>\n          //   </Media>\n          //   <div className=\"arrow-down\"></div>\n          // </div>\n        );\n      }\n      return output_arr;\n    } else {\n      return (\n        <div>\n          <div className=\"result-title-fail\">{this.state.message}</div>\n          <div className=\"result-subtitle\">{this.state.submessage}</div>\n        </div>\n      )\n    }\n  }\n\n  Graph() {\n    var neighbors = this.neighbors = {};\n\n    this.addEdge = function (u, v) {\n      if (neighbors[u] === undefined) {\n        neighbors[u] = [];\n      }\n      if (!neighbors[u].includes(v)) {\n        neighbors[u].push(v);\n      }\n    };\n    return this;\n  }\n\n  shortestPath(graph, source, target) {\n    if (source == target) {\n      return;\n    }\n    var queue = [source],\n      visited = { source: true },\n      predecessor = {},\n      tail = 0;\n\n    while (tail < queue.length) {\n      var u = queue[tail++], neighbors = graph.neighbors[u];\n      if (neighbors) {\n        for (var i = 0; i < neighbors.length; ++i) {\n          var v = neighbors[i];\n          if (visited[v]) {\n            continue;\n          }\n          visited[v] = true;\n          if (v === target) {\n            var path = [v];\n            while (u !== source) {\n              path.push(u);\n              u = predecessor[u];\n            }\n            path.push(u);\n            path.reverse();\n            return (path);\n          }\n          predecessor[v] = u;\n          queue.push(v);\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}